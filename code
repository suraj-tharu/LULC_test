//Land Cover Change Analysis between 2017 and 2022 in GEE (Study Area: Birendaranagar)//
//remove the clouds and haze
var cloudMask1 =function(image){
  var qa =image.select('pixal_qa');
  var cloud =qa.bitwiseAnd(1<<5)
                .and(qa.bitwiseAnd(1<<7))
                .or(qa.bitwiseAnd(1<<3));
var mask2 =image.mask().reduce(ee.Reducer.min());
return image.updateMask(cloud.not()).updateMask(mask2).divide(10000).copyproperties(image,["system:time_start"]);
};
function maskL8sr(image){
  var cloudShadowBitMask= 1<<3;
  var cloudBitMask = 1<<5;
  var qa = image.select('pixel_qa');
  var mask = qa.bitwiseAnd(cloudShadowBitMask).eq(0)
      .and(qa.bitwiseAnd(cloudBitMask).eq(0));
  return image.updateMask(mask).divide(10000).copyProperties(image,["system:time_start"]);
}

//Observation year
var startyear = 2017;
var endyear = 2021;

var years = ee.List.sequence(startyear, endyear);
//Determine Land Cover in 2017//
var l8Bands = ['B1','B2','B3','B4','B5','B6','B7'];
var l8Names = ['blue',
               'green',
               'red',
               'nir',
               'swir1',
               'swir2',
               'pixel_qa'];
//load Landsat 8 Tier 1 TOA image collection
var landsat_8 = ee.ImageCollection("LANDSAT/LC08/C01/T1")
    .filterBounds(birendaranagar)
    .filterDate('2017-01-01', '2018-12-30')
    .filterMetadata('CLOUD_COVER','less_than',50)
    .select(l8Bands,l8Names)
    .map(maskL8sr);

var landsat_8_1 = ee.ImageCollection("LANDSAT/LC08/C01/T1")
    .filterBounds(birendaranagar)
    .filterDate('2019-01-01', '2020-12-30')
    .filterMetadata('CLOUD_COVER','less_than',50)
    .select(l8Bands,l8Names)
    .map(maskL8sr);
    
var landsat_8_2 = ee.ImageCollection("LANDSAT/LC08/C01/T1")
    .filterBounds(birendaranagar)
    .filterDate('2020-01-01', '2021-12-30')
    .filterMetadata('CLOUD_COVER','less_than',50)
    .select(l8Bands,l8Names)
    .map(maskL8sr);
    
var full_coll =landsat_8.merge(landsat_8_1).merge(landsat_8_2);
print(full_coll);

// Annual Collection

var annual_collection= ee.ImageCollection.fromImages(years.map(function(y){
    var annual = full_coll.filter(ee.Filter.calendarRange( y, y,'year'))
                           .median().clip(birendaranagar);
      return annual.set('year', y);
}));

print(annual_collection);

var visual = {min : 0, max : 0.3, bands : "red,green,blue"};

var img_2021 = annual_collection.filter(ee.Filter.eq('year',2021)).mosaic();
Map.addLayer(img_2021,visual,"landsat 2021", false);

var img_2020 = annual_collection.filter(ee.Filter.eq('year',2020)).mosaic();
Map.addLayer(img_2020,visual,"landsat 2020", false);

var img_2019 = annual_collection.filter(ee.Filter.eq('year',2019)).mosaic();
Map.addLayer(img_2019,visual,"landsat 2019", false);

var img_2018 = annual_collection.filter(ee.Filter.eq('year',2018)).mosaic();
Map.addLayer(img_2018,visual,"landsat 2018", false);

var img_2017 = annual_collection.filter(ee.Filter.eq('year',2017)).mosaic();
Map.addLayer(img_2017,visual,"landsat 2017", false);

//Display the cliped image collection with visual parameters 
//Merge sample points together into one FeatureCollection
var sample = Forest.merge(Shrubs).merge(Agricultural_land).merge(Builtup_area).merge(Water_Bodies).merge(Barren_land);
//Select Bands from mosaic Image for training
var predictionBands =['blue',
               'green',
               'red',
               'nir',
               'swir1',
               'swir2',
               'pixel_qa'];

var trainingImage_l8 = img_2021.select(predictionBands).float();
var trainingImage_l8_1= img_2019.select(predictionBands).float();
var trainingImage_l8_2 = img_2017.select(predictionBands).float();


var classifierTraining_l8 = trainingImage_l8.select(predictionBands).sampleRegions({
  collection: sample,
  properties: ['Class'],
  scale: 30
});
var classifierTraining_l8_1 = trainingImage_l8_1.select(predictionBands).sampleRegions({
  collection: sample,
  properties: ['Class'],
  scale: 30
});

var classifierTraining_l8_2 = trainingImage_l8_2.select(predictionBands).sampleRegions({
  collection: sample,
  properties: ['Class'],
  scale: 30
});
var classifierTraining = classifierTraining_l8.merge(classifierTraining_l8_1).merge(classifierTraining_l8_2);

//Optinally, do some accuracy assessment. First, add a column of random uniforms to the training dataset.
var withRandom = classifierTraining.randomColumn('random');

//We want to reserve some of the data for testing, to avoid overfitting the model.

var split = 0.7; //Roughly 70% training, 30% testing.
var trainingPartition = withRandom.filter(ee.Filter.lt('random', split));
var testingPartition = withRandom.filter(ee.Filter.gte('random', split));

//Trained with 70% of our data.
var RandomForest= ee.Classifier.smileRandomForest(100).train({
  features: trainingPartition,
  classProperty: 'Class',
  inputProperties: predictionBands
});
print('RandomForest train error matrix:',RandomForest.confusionMatrix());
print('RandomForest train  accuracy:',RandomForest.confusionMatrix().accuracy());
print('RandomForest train  Kappa:',RandomForest.confusionMatrix().kappa());
//classify the test FeatureCollection.
var test = testingPartition.classify(RandomForest);
//print confusionmatrix

var testAccuracy = test.errorMatrix('Class','classification');

print('RandomForest train error matrix:',testAccuracy);
print('RandomForest train  accuracy:',testAccuracy.accuracy());
print('RandomForest train  Kappa:',testAccuracy.kappa());

var LULC = annual_collection.map(function(image){
  var classified_RF = image.select(predictionBands).classify(RandomForest);
  return classified_RF.copyProperties(image, ['year']);
});
var classfied_image_2021 = LULC.filter(ee.Filter.eq('year',2021)).first();
Map.addLayer(classfied_image_2021,{min : 0, max : 5,
  palette:['0e5507','07f01e','f605c8','ff0000','0d0fff','f0f909']},
'Random_Forest 2021');

var classfied_image_2020 = LULC.filter(ee.Filter.eq('year',2020)).first();
Map.addLayer(classfied_image_2020,{min : 0, max : 5,
  palette:['0e5507','07f01e','f605c8','ff0000','0d0fff','f0f909']},
'Random_Forest 2020');

var classfied_image_2019 = LULC.filter(ee.Filter.eq('year',2019)).first();
Map.addLayer(classfied_image_2019,{min : 0, max : 5,
  palette:['0e5507','07f01e','f605c8','ff0000','0d0fff','f0f909']},
'Random_Forest 2019');

var classfied_image_2018 = LULC.filter(ee.Filter.eq('year',2018)).first();
Map.addLayer(classfied_image_2018,{min : 0, max : 5,
  palette:['0e5507','07f01e','f605c8','ff0000','0d0fff','f0f909']},
'Random_Forest 2018');

var classfied_image_2017 = LULC.filter(ee.Filter.eq('year',2017)).first();
Map.addLayer(classfied_image_2017,{min : 0, max : 5,
  palette:['0e5507','07f01e','f605c8','ff0000','0d0fff','f0f909']},
'Random_Forest 2017');

var list_year = ['2017','2018','2019','2020','2021'];
var n = LULC.size().getInfo();

//.......................lULC...............................
var colList = LULC.toList(n);

for (var i= 0; i<n; i++){
  var img = ee.Image(colList.get(i));
  var img_id = list_year[i];
  
  // export image to google drive
  Export.image.toDrive({
    image: img,
    description : 'LULC_' + img_id,
    folder: 'LULC',
    fileNamePrefix: 'LULC_'+ img_id,
    region: birendaranagar,
    scale : 30,
    maxPixels : 1e13});
}

var difference2017_2021 = classfied_image_2017.subtract(classfied_image_2021);
difference2017_2021 = difference2017_2021.neq(0);

Map.addLayer(difference2017_2021,{min : 0, max : 5,
  palette: ['0e5507','07f01e','f605c8','ff0000','0d0fff','f0f909']},
  'difference 2017-2021');
  
  
Export.image.toDrive({
  image:difference2017_2021,
  description:"difference 2017-2021",
  region: birendaranagar,
    scale : 30,
    maxPixels : 1e13
});

var LULC_change = classfied_image_2017.add(classfied_image_2021);
Map.addLayer(LULC_change.clip(birendaranagar), {
  min : 0, max : 5,
  palette: ['0e5507','07f01e','f605c8','ff0000','0d0fff','f0f909']},
  'LULC_2017-2021'
  );
  

Export.image.toDrive({
  image:LULC_change,
  description:"LULC_change",
  region: birendaranagar,
    scale : 30,
    maxPixels : 1e13
});
